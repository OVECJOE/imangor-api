version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - ./credentials:/app/credentials
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=imangor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  celery_worker:
    build: .
    command: celery -A app.core.celery_app worker --loglevel=info
    env_file:
      - .env
    volumes:
      - .:/app
      - ./credentials:/app/credentials
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build: .
    command: celery -A app.core.celery_app beat --loglevel=info
    env_file:
      - .env
    volumes:
      - .:/app
      - ./credentials:/app/credentials
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  flower:
    build: .
    command: celery -A app.core.celery_app flower --port=5555
    env_file:
      - .env
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started

volumes:
  postgres_data:
  redis_data: 